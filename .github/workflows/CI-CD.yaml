# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: CI-CD

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Setup igraph on Windows
        run: |
          if (${{ env.RUNNER_OS }} == "Windows") {
            install.packages('igraph', type = 'binary')
          }
        shell: Rscript {0}

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - name: Check R package
        uses: r-lib/actions/check-r-package@v1

  shiny-deploy:
    needs: R-CMD-check
    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v1

      - name: Install rsconnect
        run: install.packages("rsconnect")
        shell: Rscript {0}

      - name: Authorize and deploy app
        run: |
          rsconnect::setAccountInfo(
            name=${{ secrets.RSCONNECT_USER }},
            token=${{ secrets.RSCONNECT_TOKEN }},
            secret=${{ secrets.RSCONNECT_SECRET }}
          )
          rsconnect::deployApp()
        shell: Rscript {0}
